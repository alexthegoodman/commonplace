// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String

  credit       Int    @default(0)
  profileImage String @default("")
  coverImage   String @default("")

  posts        Post[]
  threads      Thread[]
  messages     Message[]  @relation("userMessages")
  readMessages Message[]  @relation("userReadMessages")

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Post {
  id          String   @id @default(uuid())
  title       String
  description String

  contentType    String // "video" "image" "audio" "text" // set on Interest if needed
  contentPreview String // url or encoded data depending on contentType
  content        String
  
  interest    Interest @relation(fields: [interestId], references: [id])
  interestId  String
  modifiers   Modifier[]
  
  creator     User @relation(fields: [creatorId], references: [id])
  creatorId   String
  threads     Thread[] // each thread contains an impression

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Thread {
  id             String   @id @default(uuid())
  repliesAllowed Boolean

  post     Post?    @relation(fields: [postId], references: [id])
  postId   String
  users    User[]
  messages Message[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Message {
  id       String   @id @default(uuid())
  type     String // "impression" or "reply"
  content  String

  user     User     @relation(name: "userMessages", fields: [userId], references: [id])
  userId   String
  thread   Thread   @relation(fields: [threadId], references: [id])
  threadId String

  readBy   User[] @relation("userReadMessages")

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Interest {
  id       String   @id @default(uuid())
  name     String
  
  contentType String

  posts       Post[]
  categories  Category[]
  modifiers   Modifier[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Category {
  id       String   @id @default(uuid())
  name     String

  interests Interest[]
  
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Modifier {
  id       String   @id @default(uuid())
  name     String

  posts     Post[]
  interests Interest[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
