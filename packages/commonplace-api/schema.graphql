### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Category {
  interests: [Interest]
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Interest {
  categories: [Category]
  generatedInterestSlug: String
  name: String
  posts: [Post]
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Message {
  content: String
  createdAt: DateTime
  id: String
  post: Post
  type: String
  updatedAt: DateTime
  user: PublicUser
}

type Mutation {
  createMessage(authorUsername: String!, content: String!, postCreatorUsername: String, postId: String, threadId: String, type: String!): Message!
  createPost(contentType: String!, description: String!, file1Data: String, file1Name: String, file1Size: Int, file1Type: String, file2Data: String, file2Name: String, file2Size: Int, file2Type: String, interestId: String!, text: String, title: String!): Post!
  createReadRecord(threadId: String!, username: String!): Record!
  deletePost(creatorId: String!, postTitleSlug: String!): String!
  updatePost(creatorId: String!, description: String!, postTitleSlug: String!, title: String!): Post!
  updateProfile(coverImageData: String, coverImageName: String, coverImageSize: Int, coverImageType: String, profileImageData: String, profileImageName: String, profileImageSize: Int, profileImageType: String, userId: String!, username: String!): String!
}

type Post {
  content: String
  contentPreview: String
  contentType: String
  createdAt: DateTime
  creator: PublicUser
  description: String
  generatedTitleSlug: String
  id: String
  interest: Interest
  title: String
  updatedAt: DateTime
}

type PublicPost {
  content: String
  contentPreview: String
  contentType: String
  createdAt: DateTime
  description: String
  generatedTitleSlug: String
  id: String
  interest: Interest
  title: String
  updatedAt: DateTime
}

type PublicUser {
  chosenUsername: String
  coverImage: String
  generatedUsername: String
  name: String
  profileImage: String
}

type Query {
  authenticate: String!
  getPostByPostTitle(postTitle: String!): PublicPost
  getPostImpressions(postTitle: String!): [Message]!
  getPostURLs: [String]
  getPostsByUsername(chosenUsername: String!): [PublicPost]
  getProfileURLs: [String]
  getQueuePosts(interestId: String): [Post]
  getThreadById(threadId: String!): Thread
  getUser: User
  getUserByPostTitle(postTitle: String!): PublicUser
  getUserByUsername(chosenUsername: String!): PublicUser
  getUserThreads: [Thread]
  registerUser: String!
}

type Record {
  content: String
  createdAt: DateTime
  name: String
  updatedAt: DateTime
}

type Thread {
  createdAt: DateTime
  id: String
  messages: [Message]
  readHistory: [Record]
  repliesAllowed: Boolean
  updatedAt: DateTime
  users: [PublicUser]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  chosenUsername: String
  coverImage: String
  createdAt: DateTime
  credit: Int
  email: String
  generatedUsername: String
  name: String
  posts: [Post]
  profileImage: String
  updatedAt: DateTime
}